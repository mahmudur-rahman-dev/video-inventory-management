version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: video_inventory_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: video_inventory
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -prootpass || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - app_network

  backend:
    build:
      context: ./backend  # Set the build context to backend folder
      dockerfile: Dockerfile  # Ensure Dockerfile is referenced correctly
    container_name: video_inventory_api
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/video_inventory?allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - video_uploads:/app/uploads/videos
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend  # Set the build context to frontend folder
      dockerfile: Dockerfile
    container_name: video_inventory_ui
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_INTERNAL_API_BASE_URL=http://backend:8080/api/v1
      - NEXT_INTERNAL_VIDEO_API_BASE_URL=http://backend:8080
      # External URL for client-side API calls
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080/api/v1
      - NEXT_PUBLIC_VIDEO_API_BASE_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_started
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    name: video_inventory_mysql_data_new
  video_uploads:
    name: video_inventory_uploads

